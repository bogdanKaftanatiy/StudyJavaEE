
package wsClient.vacancyWSClient;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "VacancyWS", targetNamespace = "http://wsServices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface VacancyWS {


    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "updateVacancy", targetNamespace = "http://wsServices/", className = "wsClient.vacancyWSClient.UpdateVacancy")
    @ResponseWrapper(localName = "updateVacancyResponse", targetNamespace = "http://wsServices/", className = "wsClient.vacancyWSClient.UpdateVacancyResponse")
    public void updateVacancy(
        @WebParam(name = "arg0", targetNamespace = "")
        Vacancy arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "removeVacancy", targetNamespace = "http://wsServices/", className = "wsClient.vacancyWSClient.RemoveVacancy")
    @ResponseWrapper(localName = "removeVacancyResponse", targetNamespace = "http://wsServices/", className = "wsClient.vacancyWSClient.RemoveVacancyResponse")
    public void removeVacancy(
        @WebParam(name = "arg0", targetNamespace = "")
        Vacancy arg0);

    /**
     * 
     * @return
     *     returns java.util.List<wsClient.vacancyWSClient.Vacancy>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVacancies", targetNamespace = "http://wsServices/", className = "wsClient.vacancyWSClient.GetVacancies")
    @ResponseWrapper(localName = "getVacanciesResponse", targetNamespace = "http://wsServices/", className = "wsClient.vacancyWSClient.GetVacanciesResponse")
    public List<Vacancy> getVacancies();

    /**
     * 
     * @param arg0
     * @return
     *     returns wsClient.vacancyWSClient.Vacancy
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVacancy", targetNamespace = "http://wsServices/", className = "wsClient.vacancyWSClient.GetVacancy")
    @ResponseWrapper(localName = "getVacancyResponse", targetNamespace = "http://wsServices/", className = "wsClient.vacancyWSClient.GetVacancyResponse")
    public Vacancy getVacancy(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

}
